rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 6, 26);
    }

    // 사용자 프로필 정보
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // 레시피 정보
    match /recipes/{recipeId} {
      // 모든 인증된 사용자가 읽기 가능
      allow read: if request.auth != null;
      // 작성자만 수정/삭제 가능 (레시피는 시스템에서 관리되므로 통계 업데이트만 허용)
      allow write: if request.auth != null;
    }
    
    // 찜 목록
    match /favorites/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // 댓글
    match /comments/{commentId} {
      // 모든 인증된 사용자가 읽기 가능
      allow read: if request.auth != null;
      // 댓글 작성은 인증된 사용자, 수정/삭제는 작성자만
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // 좋아요
    match /likes/{likeId} {
      allow read, write: if request.auth != null;
    }
  }
}